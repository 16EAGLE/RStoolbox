% Generated by roxygen2 (4.0.1): do not edit by hand
\name{cloudDetect}
\alias{cloudDetect}
\title{Very simple cloud detection for imagery with blue and thermal bands}
\usage{
cloudDetect(x, threshold, minCloudSize, windowSize1 = 5, windowSize2 = 11,
  maskGrowing = TRUE, sanitize = TRUE, lowBand = "B1", tirBand = "B6",
  plot = TRUE, verbose = TRUE, returnDiffLayer = FALSE)
}
\arguments{
\item{x}{RasterBrick or RasterStack}

\item{threshold}{cloud detection threshold. If not provided it will be guessed.}

\item{minCloudSize}{minimum number of cloud pixels in window1}

\item{windowSize1}{odd number, rectangular moving window to remove clouds which arre too small (likely artefacts)}

\item{windowSize2}{odd number, rectangular buffer around cluster centers}

\item{sanitize}{logical. Should small clouds (possibly false positives) be removed by filtering? If \code{TRUE} windowSize1 must be specified.}

\item{maskGrowing}{logical. Applies simple region-growing (rectangular buffering) to the cloud mask. If \code{TRUE} windowSize2 must be specified.}

\item{lowBand}{bandname or number for the blue band}

\item{tirBand}{bandname or number for the thermal band}

\item{plot}{logical. Provides plots of the cloud mask for all sub-steps (sanitizing etc.) Helpful to find proper parametrization.}

\item{verbose}{logical. Print messages or supress.}

\item{returnDiffLayer}{logical. If \code{TRUE}, the difference layer will be returned along with the cloudmask. This option allows to re-use the difference layer in cloudDetect.}
}
\description{
Very simple cloud detection for imagery with blue and thermal bands
}
\note{
Typically clouds are cold in the thermal (high value) and have high reflectance in short wavelengths. By ratioing the two bands an rough cloud mask can be obtained.
More precise approaches can be found elsewhere, e.g. \link[fmask]{https://code.google.com/p/fmask/}.
}
\examples{
\dontrun{
ls <- stackMeta("path/to/MTL.txt")
ls_cor <- radCor(ls, "path/to/MTL.txt")
ls_cmask <-cloudDetect(ls_cor, returnDiffLayer = TRUE)
}
}

